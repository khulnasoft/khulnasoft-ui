"use strict";(self.webpackChunk_khulnasoft_khulnasoft_ui=self.webpackChunk_khulnasoft_khulnasoft_ui||[]).push([[545],{"./src/components/button/button.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BaseIconButton:()=>BaseIconButton,Basic:()=>Basic,RadioButtonGroup:()=>RadioButtonGroup,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),___WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/button/index.js"),_icon__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/icon/index.js");function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(e,r,t){return(r=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==typeof i?i:i+""}(r))in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const icons=Object.keys(_icon__WEBPACK_IMPORTED_MODULE_2__.iconsList),Basic=args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_1__.Button,args),BaseIconButton=args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_1__.IconButton,_extends({},args,{label:"",cursor:"pointer",icon:"chevron_left",iconSize:"small",tooltip:"Previous"})),radioButtonItems=[{label:"One",value:1},{label:"Two",value:2},{label:"Three",value:3}],RadioButtonGroup=args=>{const[checked,setChecked]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(1);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_1__.ButtonGroup,{items:radioButtonItems.map((item=>_objectSpread(_objectSpread({},args),item))),checked,onChange:value=>setChecked(value)})},__WEBPACK_DEFAULT_EXPORT__={component:___WEBPACK_IMPORTED_MODULE_1__.Button,tags:["autodocs"],args:{onClick:()=>alert("clicked"),flavour:"default",id:"some-id",className:"some-classname",label:"My button",loadingLabel:"Loading button",icon:icons[0],isLoading:!1,disabled:!1,danger:!1,warning:!1,small:!1,neutral:!1},argTypes:{flavour:{options:["default","hollow","borderless"],control:{type:"radio"}},id:{control:"text"},className:{control:"text"},label:{control:"text"},loadingLabel:{control:"text"},icon:{options:icons,type:"select"},isLoading:{control:"boolean"},disabled:{control:"boolean"},danger:{control:"boolean"},warning:{control:"boolean"},small:{control:"boolean"},neutral:{control:"boolean"}}},__namedExportsOrder=["Basic","BaseIconButton","RadioButtonGroup"];Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:"args => <Button {...args} />",...Basic.parameters?.docs?.source}}},BaseIconButton.parameters={...BaseIconButton.parameters,docs:{...BaseIconButton.parameters?.docs,source:{originalSource:'args => <IconButton {...args} label="" cursor="pointer" icon="chevron_left" iconSize="small" tooltip="Previous" />',...BaseIconButton.parameters?.docs?.source}}},RadioButtonGroup.parameters={...RadioButtonGroup.parameters,docs:{...RadioButtonGroup.parameters?.docs,source:{originalSource:"args => {\n  const [checked, setChecked] = useState(1);\n  const onChange = value => setChecked(value);\n  return <ButtonGroup items={radioButtonItems.map(item => ({\n    ...args,\n    ...item\n  }))} checked={checked} onChange={onChange} />;\n}",...RadioButtonGroup.parameters?.docs?.source}}}}}]);